name: Example workflow cml#1173
on: [pull_request]
env:
  REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  run:
    runs-on: ubuntu-latest
    # optionally use a convenient Ubuntu LTS + DVC + CML image
    # container: docker://ghcr.io/iterative/cml:0-dvc2-base1
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: actions/setup-node@v3
        with:
          node-version: 16
#      - run: npm install -g "https://github.com/iterative/cml#d001-watermark-spaces" --save
      - run: npm install -g "https://github.com/tasdomas/cml#test-watermarks" --save
      - name: Add comment
        run: |
          echo "### Custom Water Mark Test" > ./comment.md
          echo workflow_name > ./comment.md
          if [ "${{ github.event.action }}" == "opened" ]; then
            echo "PR Opened" >> ./comment.md
            cml comment create --pr --watermark-title "{workflow}" ./comment.md
          fi
          if [ "${{ github.event.action }}" == "synchronize" ]; then
            echo "PR commit count: $(git rev-list origin/main.. --count)" >> ./comment.md
            cml comment update --pr --watermark-title "{workflow}" ./comment.md
          fi
      - name: Add comment with asterisk
        run: |
          echo "### Custom Water Mark Test" > ./comment.md
          echo asterisk > ./comment.md
          comment='* comment'
          if [ "${{ github.event.action }}" == "opened" ]; then
            echo "PR Opened" >> ./comment.md
            cml comment create --pr --watermark-title "${comment}" ./comment.md
          fi
          if [ "${{ github.event.action }}" == "synchronize" ]; then
            echo "PR commit count: $(git rev-list origin/main.. --count)" >> ./comment.md
            cml comment update --pr --watermark-title "${comment}" ./comment.md
          fi
      - name: Add comment with slash
        run: |
          echo "### Custom Water Mark Test" > ./comment.md
          echo slash > ./comment.md
          comment='/ comment'
          if [ "${{ github.event.action }}" == "opened" ]; then
            echo "PR Opened" >> ./comment.md
            cml comment create --pr --watermark-title "${comment}" ./comment.md
          fi
          if [ "${{ github.event.action }}" == "synchronize" ]; then
            echo "PR commit count: $(git rev-list origin/main.. --count)" >> ./comment.md
            cml comment update --pr --watermark-title "${comment}" ./comment.md
          fi
      - name: Add comment with parens
        run: |
          echo "### Custom Water Mark Test" > ./comment.md
          echo parens > ./comment.md
          comment='(comment)'
          if [ "${{ github.event.action }}" == "opened" ]; then
            echo "PR Opened" >> ./comment.md
            cml comment create --pr --watermark-title "${comment}" ./comment.md
          fi
          if [ "${{ github.event.action }}" == "synchronize" ]; then
            echo "PR commit count: $(git rev-list origin/main.. --count)" >> ./comment.md
            cml comment update --pr --watermark-title "${comment}" ./comment.md
          fi
      - name: Add comment with brackets
        run: |
          echo "### Custom Water Mark Test" > ./comment.md
          echo brackets > ./comment.md
          comment='[comment]'
          if [ "${{ github.event.action }}" == "opened" ]; then
            echo "PR Opened" >> ./comment.md
            cml comment create --pr --watermark-title "${comment}" ./comment.md
          fi
          if [ "${{ github.event.action }}" == "synchronize" ]; then
            echo "PR commit count: $(git rev-list origin/main.. --count)" >> ./comment.md
            cml comment update --pr --watermark-title "${comment}" ./comment.md
          fi
      - name: Add comment with angle brackets
        run: |
          echo "### Custom Water Mark Test" > ./comment.md
          echo angle_brackets > ./comment.md
          comment='<comment>'
          if [ "${{ github.event.action }}" == "opened" ]; then
            echo "PR Opened" >> ./comment.md
            cml comment create --pr --watermark-title "${comment}" ./comment.md
          fi
          if [ "${{ github.event.action }}" == "synchronize" ]; then
            echo "PR commit count: $(git rev-list origin/main.. --count)" >> ./comment.md
            cml comment update --pr --watermark-title "${comment}" ./comment.md
          fi
